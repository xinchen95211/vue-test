{"version":3,"file":"js/123.6ab50e1f.js","mappings":"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","sources":["webpack://vuefront/./src/views/RegisterView.vue","webpack://vuefront/./src/components/RegisterComponents.vue","webpack://vuefront/./src/components/RegisterComponents.vue?03a2","webpack://vuefront/./src/views/RegisterView.vue?1ec6"],"sourcesContent":["<template>\n  <div class=\"login-wrapper\">\n    <register-components></register-components>\n    <br>\n    <div class=\"msg\">\n      已有账户?\n      <a style=\"color: blue\" @click=\"this.$router.push('/login')\">去登陆</a>\n    </div>\n  </div>\n</template>\n\n<script>\nimport RegisterComponents from \"@/components/RegisterComponents\";\nexport default {\n  name: \"RegisterView\",\n  components:{\n    RegisterComponents\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","<template>\n  <div class=\"header\">\n    <p>注册</p>\n  </div>\n\n  <el-form  class=\"form-wrapper\" :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"auto\" >\n    <el-form-item  prop=\"username\">\n      <el-input type=\"text\" onkeyup=\"value=value.replace(/[^\\w\\.\\/]/ig,'')\" v-model=\"ruleForm.username\" autocomplete=\"off\"  placeholder=\"用户名\" class=\"input-item\" minlength=\"3\" maxlength=\"30\"></el-input>\n    </el-form-item>\n    <el-form-item  prop=\"password\">\n      <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\" placeholder=\"密码\" class=\"input-item\" minlength=\"6\" maxlength=\"30\" show-password></el-input>\n    </el-form-item>\n    <el-form-item  prop=\"email\" :rules=\"[\n        {\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur',\n        },\n        {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: ['blur', 'change'],\n        },\n      ]\">\n      <el-input type=\"text\"  v-model=\"ruleForm.email\" placeholder=\"邮箱\"  class=\"input-item\"  clearable></el-input>\n    </el-form-item>\n    <el-form-item  class=\"input-item-row\" prop=\"emailCheckCode\">\n      <el-input type=\"text\"  onkeyup=\"value=value.replace(/\\D/g,'')\" v-model=\"ruleForm.emailCheckCode\" placeholder=\"验证码\" class=\"input-item\" clearable></el-input>\n      <el-button :disabled=\"emailCheckCodeStatus\"  @click=\"showEmailCheckCode\">{{emailCheckCodeText}}</el-button>\n    </el-form-item>\n    <el-form-item>\n      <el-button class=\"loginBtn\" @click=\"Register('ruleForm')\">注册</el-button>\n    </el-form-item>\n  </el-form>\n\n\n\n\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {ElMessage} from \"element-plus\";\n\nexport default {\n  name: \"RegisterComponents\",\n  data() {\n    const validateUsername = async (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      }else if (value.length < 3){\n        callback(new Error('输入的用户名太短了'))\n      } else {\n        if (await this.checkNameFrom()) {\n          callback();\n        } else {\n          callback(new Error(\"用户名已存在\"));\n        }\n      }\n    };\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6){\n        callback(new Error('输入的密码太短了'))\n      }else {\n        callback();\n      }\n    };\n    const validateEmail = async (rule, value, callback) => {\n        if (await this.checkEmail()) {\n          callback();\n        } else {\n          callback(new Error(\"你已经注册过了,请去登陆吧\"));\n        }\n    };\n    const validateEmailCheckCode = async (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else {\n        if (await this.checkEmailCode()) {\n          callback();\n        } else {\n          callback(new Error(\"验证码输入错误\"));\n        }\n        callback();\n      }\n    };\n\n    return {\n      //输入内容\n      ruleForm:{\n        username: '',\n        password: '',\n        email:'',\n        emailCheckCode:'',\n      },\n      rules: {\n        username: [\n          { validator: validateUsername, trigger: 'blur' }\n        ],\n        password: [\n          { validator: validatePassword, trigger: 'blur' }\n        ],\n        emailCheckCode:[\n          { validator: validateEmailCheckCode, trigger: 'blur' }\n        ],\n        email:[\n          { validator: validateEmail, trigger: 'blur' }\n        ]\n      },\n      emailCheckCodeText:'获取验证码',\n      emailCheckCodeStatus:false\n    };\n  },\n  created() {\n  },\n  methods:{\n    //注册用户\n    Register(formName){\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          axios.post(\"/api/register\",this.ruleForm).then(e => {\n             if (e.data.code === 210){\n              ElMessage.success(e.data.message)\n            }\n          })\n        } else {\n          return false;\n        }\n      });\n    },\n    timer(time) {\n      if (time > 0) {\n        time--;\n        this.emailCheckCodeText = \"已发送（\" + time + \"）\";\n        setTimeout(() => {\n          this.timer(time)\n        }, 1000);\n      } else{\n        this.emailCheckCodeText = \"获取验证码\";\n        this.emailCheckCodeStatus = false;\n      }\n    },\n    //获取验证码\n    showEmailCheckCode(){\n      this.$refs.ruleForm.validateField(\"email\",(valid) => {\n        if (valid){\n          this.emailCheckCodeStatus = true;\n          let time = 60;\n          this.timer(time)\n        axios.get(`/api/register/getEmailCheckCode/${this.ruleForm.email}`).then(e => {\n          if (e.data.code === 200) {\n            ElMessage.success(e.data.data)\n          }\n        })\n        }else {\n          return false;\n        }\n      })\n    },\n    //检测用户名是否存在\n    async checkNameFrom() {\n       try {\n         const response = await axios.get(`/api/register/checkName/${this.ruleForm.username}`);\n         return response.data.code === 200;\n       } catch (error) {\n         return false;\n       }\n     },\n    //检测这个邮箱是否注册过\n    async checkEmail(){\n      try {\n        const response = await axios.get(`/api/register/checkEmail/${this.ruleForm.email}`);\n        return response.data.code === 200;\n      } catch (error) {\n        return false;\n      }\n    },\n    //检测邮箱验证码是否正确\n    async checkEmailCode() {\n      try {\n        const response = await axios.post(`/api/register/checkEmailCode`, this.ruleForm);\n        return response.data.code === 200;\n      } catch (error) {\n        return false;\n      }\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import { render } from \"./RegisterComponents.vue?vue&type=template&id=6fdbd94e\"\nimport script from \"./RegisterComponents.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterComponents.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./RegisterView.vue?vue&type=template&id=f2956dd6\"\nimport script from \"./RegisterView.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_register_components","_hoisted_2","_hoisted_3","_createTextVNode","style","onClick","_cache","$event","$router","push","_Fragment","_component_el_form","model","$data","ruleForm","rules","ref","default","_withCtx","_component_el_form_item","prop","_component_el_input","type","onkeyup","modelValue","username","autocomplete","placeholder","minlength","maxlength","_","password","email","clearable","emailCheckCode","_component_el_button","disabled","emailCheckCodeStatus","$options","showEmailCheckCode","_toDisplayString","emailCheckCodeText","Register","name","data","validateUsername","async","rule","value","callback","Error","length","this","checkNameFrom","validatePassword","validateEmail","checkEmail","validateEmailCheckCode","checkEmailCode","validator","trigger","created","methods","formName","$refs","validate","valid","axios","post","then","e","code","ElMessage","success","message","timer","time","setTimeout","validateField","get","response","error","__exports__","components","RegisterComponents","render"],"sourceRoot":""}